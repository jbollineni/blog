{"host":"100.92.161.170","message":"<133>Nov  5 03:11:02 bigip01.example.com notice mcpd[7128]: 01070639:5: Pool /Common/p_training member /Common/100.92.161.137:80 session status enabled.\n","port":26590,"source_type":"socket","timestamp":"2023-11-05T03:10:58.433745716Z"}

{"host":"100.92.161.170","message":"<133>Nov  5 03:49:22 bigip01.example.com notice mcpd[7128]: 01070638:5: Pool /Common/p_training member /Common/100.92.161.137:80 monitor status down. [ /Common/m_test: down; last error: /Common/m_test: Unable to connect @2023/11/05 03:49:22.  ]  [ was up for 239hrs:39mins:52sec ]\n","port":53661,"source_type":"socket","timestamp":"2023-11-05T03:49:18.337815523Z"}

{"host":"100.92.161.170","message":"Nov  5 03:11:02 bigip01.example.com notice mcpd[7128]: 01070639:5: Pool /Common/p_training member /Common/100.92.161.137:80 session status enabled.\n","port":26590,"source_type":"socket","timestamp":"2023-11-05T03:10:58.433745716Z"}


parse_groks!(
	"Nov  5 03:11:02 bigip01.example.com notice mcpd[7128]: 01070639:5: Pool /Common/p_training member /Common/100.92.161.137:80 session status enabled.\n",
	patterns: [
		"(?<message>((?m)|\r|\n)*)",
	]
)

parse_groks!(
	"<133>Nov  5 03:11:02 bigip01.example.com notice mcpd[7128]: 01070639:5: Pool /Common/p_training member /Common/100.92.161.137:80 session status enabled.\n",
	patterns: [
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{LOGLEVEL:LOGLEVEL} %{DATA:SYSLOGPROG}(:) %{DATA:SYSLOGID}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} session status %{DATA:STATE}(.)(?m)%{GREEDYDATA}"
		"(?m)%{GREEDYDATA:grokfailedmessage}",
	]
)

parse_groks!(
	"<133>Nov  5 03:49:22 bigip01.example.com notice mcpd[7128]: 01070638:5: Pool /Common/p_training member /Common/100.92.161.137:80 monitor status down.",
	patterns: [
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{LOGLEVEL:LOGLEVEL} %{DATA:SYSLOGPROG}(:) %{DATA:SYSLOGID}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} monitor status %{DATA:STATUS}(.)%{GREEDYDATA}",
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{LOGLEVEL:LOGLEVEL} %{DATA:SYSLOGPROG}(:) %{DATA:SYSLOGID}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} session status %{DATA:STATE}(.)(?m)%{GREEDYDATA}",
		
        
        "(?m)%{GREEDYDATA:grokfailedmessage}",
	]
)

parse_groks!(
	"<133>Nov  5 12:23:07 bigip01.example.com notice mcpd[7128]: 01070727:5: Pool /Common/p_training member /Common/100.92.161.137:80 monitor status up. [ /Common/m_test: up ]  [ was down for 8hrs:33mins:45sec ]",
	patterns: [
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} monitor status %{DATA:STATUS}. %{GREEDYDATA}",
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} session status %{DATA:STATE}?$",
		
        
        "(?m)%{GREEDYDATA:grokfailedmessage}",
	]
)


parse_groks!(
	"<133>Nov  5 03:11:02 bigip01.example.com notice mcpd[7128]: 01070639:5: Pool /Common/p_training member /Common/100.92.161.137:80 session status enabled.",
	patterns: [
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} monitor status %{DATA:STATUS}(.) %{GREEDYDATA}",
        "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} session status %{DATA:STATE}.",
		
        
        "(?m)%{GREEDYDATA:grokfailedmessage}",
	]
)


#Begin parsing events that contain the keyword 'Pool'
.= parse_groks!(
	replace(string!(.message), "\n$", ""),
    patterns: [
    "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} monitor status %{DATA:STATUS}(.) %{GREEDYDATA}",
    "%{GREEDYDATA}<%{NUMBER}>%{SYSLOGTIMESTAMP:LBMONITORTIMESTAMP} %{HOSTNAME:DEVICENAME} %{DATA}(:) Pool /Common/%{DATA:POOLNAME} member /Common/%{DATA:MEMBER} session status %{DATA:STATE}(.)?$",
		
        
    "(?m)%{GREEDYDATA:grokfailedmessage}",
    ]
    )



parse_grok!(.data, "%{GREEDYDATA}%{SYSLOGTIMESTAMP:lbmonitortimestamp} %{HOSTNAME:devicename} %{GREEDYDATA} Pool /Common/%{GREEDYDATA:poolname} member /Common/%{GREEDYDATA:member} monitor status %{GREEDYDATA:status}\\.")

.data="<133>Nov 13 04:18:56 bigip01.example.net notice mcpd[7128]: 01070727:5: Pool /Common/p_foo-stg_80 member /Common/100.92.161.138:80 monitor status up. [ /Common/m_foo-stg_80_http: up ]  [ was down for 0hr:1min:37sec ]"
.data = "<133>Nov 13 04:06:16 bigip01.example.net notice mcpd[7128]: 01070639:5: Pool /Common/p_foo-stg_80 member /Common/100.92.161.138:80 session status enabled."

parse_groks!(
	.data,
    patterns: [
        "%{GREEDYDATA}%{SYSLOGTIMESTAMP:lbmonitortimestamp} %{HOSTNAME:devicename} %{GREEDYDATA} Pool /Common/%{GREEDYDATA:poolname} member /Common/%{GREEDYDATA:member} monitor status %{DATA:status}. %{GREEDYDATA}",
        "%{GREEDYDATA}%{SYSLOGTIMESTAMP:lbadmintimestamp} %{HOSTNAME:devicename} %{GREEDYDATA} Pool /Common/%{GREEDYDATA:poolname} member /Common/%{GREEDYDATA:member} session status %{GREEDYDATA:state}.",
		
        #Catch grok failed events
        "%{GREEDYDATA:grokfailedmessage}",
    ]
    )

.data="<145>Nov 15 00:46:58.444 bigip01.example.net alert tmm1[27599]: 011a4005:1: SNMP_TRAP: Pool (/Common/p_foo-stg-1t_80) member (100.92.161.138:80) enabled"

parse_groks!(
	.data,
    patterns: [
        #SLB Grok patterns
        "%{GREEDYDATA}%{SYSLOGTIMESTAMP:lbmonitortimestamp} %{HOSTNAME:devicename} %{GREEDYDATA} Pool /Common/%{GREEDYDATA:poolname} member /Common/%{GREEDYDATA:member} monitor status %{DATA:status}. %{GREEDYDATA}",
        "%{GREEDYDATA}%{SYSLOGTIMESTAMP:lbadmintimestamp} %{HOSTNAME:devicename} %{GREEDYDATA} Pool /Common/%{GREEDYDATA:poolname} member /Common/%{GREEDYDATA:member} session status %{GREEDYDATA:state}.",
		
        #GSLB Grok patterns
        "%{GREEDYDATA:test}%{SYSLOGTIMESTAMP:lbadmintimestamp}{GREEDYDATA:asdf}",

        #Catch grok failed events
        "%{GREEDYDATA:grokfailedmessage}",
    ]
    )

parse_groks!(
	"2020-10-02T23:22:12.223222Z info Hello world",
	patterns: [
		"%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}",
		"%{GREEDYDATA:message}",
	]
)



parse_groks!(
	"2020-10-02T23:22:12.223222Z info Hello world",
	patterns: [
		"%{TIMESTAMP_ISO8601:timestamp} %{LOGLEVEL:level} %{GREEDYDATA:message}" ,
		"%{common_prefix} %{_message}",
	],
	aliases: {
		"common_prefix": "%{_timestamp} %{_loglevel}",
		"_timestamp": "%{TIMESTAMP_ISO8601:timestamp}",
		"_loglevel": "%{LOGLEVEL:level}",
		"_status": "%{POSINT:status}",
		"_message": "%{GREEDYDATA:message}"
	}
)